'use strict';
/*######################################################################################################################


 ######################################################################################################################*/
/*======================================================================================================================

 ======================================================================================================================*/
var gulp            = require('gulp');
var $               = require('gulp-load-plugins')();
var browserSync     = require('browser-sync');
var rimraf          = require('rimraf');
var runSequence     = require('run-sequence');
var concat          = require('gulp-concat');
var caches          = require('gulp-cached');
var bower           = require('gulp-bower-files');
var mainBowerFiles  = require('main-bower-files');

var siteUrl         = '';
/*======================================================================================================================
 bower
 ======================================================================================================================*/
gulp.task('bower', function () {

    var files   = mainBowerFiles();

    return gulp.src(files)
        .pipe($.if('*.js',concat('lib.js')))
        .pipe(gulp.dest('./src/js/lib'))
});
/*======================================================================================================================
 JS分チェック
 ======================================================================================================================*/
gulp.task('jshint', function () {
    return gulp.src('src/js/**/*.js')
        .pipe($.jshint())
        .pipe($.jshint.reporter('jshint-stylish'));
});
/*======================================================================================================================
 画像圧縮
 ======================================================================================================================*/
gulp.task('image', function () {
    return gulp.src('src/img/**/*')
        .pipe($.changed('public/img'))
        .pipe($.imagemin({
            progressive: true,
            interlaced: true
        }))
        .pipe(gulp.dest('public/img'));
});
/*======================================================================================================================
 SASS
 ======================================================================================================================*/
gulp.task('scss',function(){
    return gulp.src('src/sass/**/*.scss')
        //.pipe(caches('scss'))
        .pipe($.sass())
        .pipe($.autoprefixer('last 1 version'))
        .pipe(gulp.dest('.tmp/css'));
});
/*======================================================================================================================
 HTML変更時処理
 useref > js,CSSまとめ指示
 uglify > js圧縮
 csso   > 軽量化
 minifyHtml > html圧縮
 public/に展開
 ======================================================================================================================*/
gulp.task('html',function(){

    var assets = $.useref.assets({searchPath: ['.tmp','src']});

    return gulp.src('src/**/*.html')
        .pipe($.changed('public'))
        .pipe(assets)
        .pipe($.if('/**/*.js',$.uglify({preserveComments: 'some'})))
        .pipe($.if('/**/*.css',$.cssmin()))
        .pipe(assets.restore())
        .pipe($.useref())
        .pipe($.if('*.html',$.minifyHtml()))
        .pipe(gulp.dest('public'));
});
/*======================================================================================================================
 pdfファイルはきだし
 ======================================================================================================================*/
gulp.task('destPDF',function(){
    return gulp.src('src/**/*.pdf').pipe(gulp.dest('public'));
});
/*======================================================================================================================
 フォントファイルはきだし
 ======================================================================================================================*/
gulp.task('destFont',function(){
    return gulp.src('src/font/**/*.+(eot|otf|ttf|svg|woff|woff)').pipe(gulp.dest('public/font'));
});
/*======================================================================================================================
 ムービーファイルはきだし
 ======================================================================================================================*/
gulp.task('movie',function(){
    return gulp.src('src/movie/**/*.+(mp4|webm)').pipe(gulp.dest('public/movie'));
});
/*======================================================================================================================
 ビルド環境初期化
 ======================================================================================================================*/
gulp.task('clean',function(cb){
    rimraf('public',cb);
});
/*======================================================================================================================
 サイトマップ作成
 ======================================================================================================================*/
gulp.task('sitemap', function () {
    gulp.src('src/**/*.html')
        .pipe($.sitemap({
            siteUrl: siteUrl
        }))
        .pipe(gulp.dest('./public'));
});
/*======================================================================================================================
 監視
 ======================================================================================================================*/
gulp.task('watch',function(){
    browserSync.init({
        server:{
            baseDir: ['src','.tmp']
        },
        notify: false
    });

    gulp.watch(['src/sass/**/*.scss'], ['scss']);
    gulp.watch(['src/**/*.html'], browserSync.reload);
    gulp.watch(['{.tmp,src}/css/**/*.css'], browserSync.reload);
    gulp.watch(['src/js/**/*.js'], ['jshint',browserSync.reload]);
    gulp.watch(['src/img/**/*'], browserSync.reload);

});
/*======================================================================================================================
 ビルド処理 $ gulp build
 ======================================================================================================================*/
gulp.task('build', function (cb) {
    runSequence('clean','scss', ['jshint', 'html', 'image'],'destFont','destPDF', cb);
});
/*======================================================================================================================
 初期設定
 ======================================================================================================================*/
gulp.task('default',['watch']);


